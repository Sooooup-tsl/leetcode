/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number[]}
 */
var intersect = function(s,t) {
    let result = []
    let map = new Map()
    let nums1 = s.length>t.length ? t : s
    let nums2 = s.length>t.length ? s : t
    
    for(var i =0;i<nums1.length;i++) {
        let count = 1
        if(map.has(nums1[i])) {
            count = map.get(nums1[i])
            count++
        }

        map.set(nums1[i], count)
    }

    console.log(map)
    for(var i =0;i<nums2.length;i++) {
        if(map.has(nums2[i])) {
            let s = map.get(nums2[i])
            if(s>0) {
                result.push(nums2[i])
                s--
                map.set(nums2[i], s)
            }
        }
    }
    return result
};
//runtime:64 ms
//memory:43.8 MB
